name: Create a docker image and publish it to GHCR then create a container on the VPS

on:
    push:
        branches: ['main']

env:
    REGISTRY: ghcr.io
    IMAE_NAME: ${{github.repository}}

jobs:
    build-and-push-image:
        runs-on: ubuntu-20.04

        permissions:
            contents: read
            packages: write
            attestations: write

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Log in to the Container registry
            uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
            with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

          - name: Extract metadata (tags, labels) for Docker
            id: meta
            uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
            with:
                images: ${{ env.REGISTRY }}/${{ github.repository }}

          - name: Build and push Docker image
            id: push
            uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
            with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}


    update-password:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout repository
          uses: actions/checkout@v3


        - name: Update Prometheus and Promtail password
          uses: mikefarah/yq@master
          with:
            cmd: |
             yq '.remote_write[0].basic_auth.password = "${{secrets.PROMETHEUS_PASSWORD}}"' prometheus.yml
             yq '.clients[0].basic_auth.password = "${{secrets.LOKI_PASSWORD}}"' promtail-config.yaml

        - name: Display updated file
          run: | 
            cat prometheus.yml                
            cat promtail-config.yaml



    deploy:
        runs-on: ubuntu-20.04
        needs: build-and-push-image
        steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Copy docker-compose.yml to server
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_KEY }}
            source: "docker-compose.yml, prometheus.yml, promtail-config.yaml"
            target: "/home/ubuntu/"

        - name: Deploy to VPS
          uses: appleboy/ssh-action@v0.1.6
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_KEY }}
            script: | 
                cd /home/ubuntu
                docker-compose up -d





       

   